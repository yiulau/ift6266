from get_datastream import get_datastream
from fuel.server import start_server
from argparse import ArgumentParser
from fuel.server import start_server
#image_size = (64,64)
#batch_size = 128
#train_stream = get_datastream(image_size,1.5,300,batch_size,'train')
#valid_stream = get_datastream(image_size,1.5,300,batch_size,'valid')

def branch(datasource,image_size,maxhwratio,min_num_dim,batch_size):
    image_size = (image_size,image_size)
    if datasource == 'train':
        stream = get_datastream(image_size,maxhwratio,min_num_dim,batch_size,'train')
        port = 5007
    if datasource == 'valid':
        stream = get_datastream(image_size,maxhwratio,min_num_dim,batch_size,'valid')
        port = 5008
    if datasource == 'test':
        stream = get_datastream(image_size,maxhwratio,min_num_dim,batch_size,'test')
        port = 5009 
    start_server(stream,port=port)

if __name__ == '__main__':
    parser = ArgumentParser("Spawn a data server")
    parser.add_argument("--datasource",default="train",nargs='?',
                        help = "specifies the source of data. Must be"
                        " either 'train','valid',or,'test'")
    parser.add_argument("--image_size",type=int ,default=64,
                        help = "length of square image generated by data stream")
    parser.add_argument("--maxhwratio",type=float,default=1.5,
                        help="See rescale_transformer")
    parser.add_argument("--min_num_dim",type=int,default=300,
                        help="See rescale_transformer")
    parser.add_argument("--batch_size",type=int,default=64,
                        help="See rescale_transformer")
    args = parser.parse_args()
    branch(**vars(args))  
     


